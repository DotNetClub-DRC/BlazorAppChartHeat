@page "/"

@inject WeatherForecastService service

<style>
    body {
        margin: 0;
        font-family: Arial, Helvetica, sans-sherif;
    }

    .container {
        height: 100vh;
        display: grid;
        grid-template-columns: 1fr 5fr;
    }

    aside {
        display: grid;
        grid-template-rows: repeat(7, 1fr);
    }

    main {
        display: grid;
        grid-template-columns: repeat(5, 1fr);
        grid-template-rows: repeat(7, 1fr);
    }

    section {
        border-right: 3px solid black;
        border-bottom: 3px solid black;
        display: grid;
        justify-content: center;
        align-content: center;
    }

        section p {
            display: grid;
            justify-content: center;
            align-content: center;
        }
</style>

<div class="container">
    <aside>
        <section><h3>Monday</h3></section>
        <section><h3>Tuesday</h3></section>
        <section><h3>Wednesday</h3></section>
        <section><h3>Thursday</h3></section>
        <section><h3>Friday</h3></section>
        <section><h3>Saturday</h3></section>
        <section><h3>Sunday</h3></section>
    </aside>
    <main>
        @foreach (var item in forecasts)
        {
            <section style="background-color: @(colorCalculate(item.TemperatureC))">
                <p>@item.Date.ToShortDateString()</p>
                <p>@item.TemperatureC C</p>
            </section>
        }
    </main>
</div>

@code
{
    List<WeatherForecast> forecasts;
    protected override async Task OnInitializedAsync()
    {
        forecasts = (await service.GetForecastAsync(DateTime.Now)).ToList();
    }

    public string colorCalculate(decimal temp)
    {
        return temp switch
        {
            >= 0 => $"rgba(255,0,0, {temp / 55})",
            < 0 => $"rgba(30,144,255,{Math.Abs(temp) / 20})"
        };
    }
}